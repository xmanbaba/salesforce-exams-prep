rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ============================================================================
    // HELPER FUNCTIONS
    // ============================================================================
    
    // Check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Check if the authenticated user matches the userId in the path
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Validate exam attempt data structure
    function isValidExamAttempt() {
      let data = request.resource.data;
      return data.keys().hasAll(['examName', 'score', 'totalQuestions', 'timeSpent', 'percentage', 'passed', 'userId', 'timestamp'])
        && data.examName is string
        && data.score is number
        && data.totalQuestions is number
        && data.timeSpent is number
        && data.percentage is number
        && data.passed is bool
        && data.userId == request.auth.uid
        && data.questions is list
        && data.userAnswers is map;
    }
    
    // Validate paused exam data structure
    function isValidPausedExam() {
      let data = request.resource.data;
      return data.keys().hasAll(['examName', 'currentQuestion', 'answers', 'timeLeft', 'questions', 'examStartTime', 'userId', 'pausedAt', 'totalQuestions', 'answeredCount'])
        && data.examName is string
        && data.currentQuestion is number
        && data.answers is map
        && data.timeLeft is number
        && data.questions is list
        && data.examStartTime is number
        && data.userId == request.auth.uid
        && data.pausedAt is timestamp
        && data.totalQuestions is number
        && data.answeredCount is number;
    }
    
    // ============================================================================
    // ARTIFACTS COLLECTION - APP-SPECIFIC DATA
    // ============================================================================
    
    match /artifacts/{appId}/users/{userId} {
      
      // ========================================================================
      // EXAM ATTEMPTS COLLECTION (Completed Exams)
      // ========================================================================
      
      match /examAttempts/{attemptId} {
        
        // Allow READ if:
        // - User is authenticated AND
        // - User is the owner of the data
        allow read: if isOwner(userId);
        
        // Allow CREATE if:
        // - User is authenticated AND
        // - User is the owner AND
        // - Data structure is valid
        allow create: if isOwner(userId) && isValidExamAttempt();
        
        // Allow UPDATE if:
        // - User is authenticated AND
        // - User is the owner AND
        // - Data structure remains valid
        allow update: if isOwner(userId) && isValidExamAttempt();
        
        // Allow DELETE if:
        // - User is authenticated AND
        // - User is the owner
        allow delete: if isOwner(userId);
      }
      
      // ========================================================================
      // PAUSED EXAMS COLLECTION (Paused/In-Progress Exams) - NEW!
      // ========================================================================
      
      match /pausedExams/{examName} {
        
        // Allow READ if:
        // - User is authenticated AND
        // - User is the owner of the data
        allow read: if isOwner(userId);
        
        // Allow CREATE if:
        // - User is authenticated AND
        // - User is the owner AND
        // - Data structure is valid
        allow create: if isOwner(userId) && isValidPausedExam();
        
        // Allow UPDATE if:
        // - User is authenticated AND
        // - User is the owner AND
        // - Data structure remains valid
        // - userId cannot be changed (security)
        allow update: if isOwner(userId) 
          && isValidPausedExam()
          && request.resource.data.userId == resource.data.userId;
        
        // Allow DELETE if:
        // - User is authenticated AND
        // - User is the owner
        allow delete: if isOwner(userId);
      }
    }
    
    // ============================================================================
    // DEFAULT DENY ALL OTHER PATHS
    // ============================================================================
    
    match /{document=**} {
      allow read, write: if false;
    }
  }
}